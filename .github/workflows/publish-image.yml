name: Build & push multiarch container image
on: push

jobs:
  build:
    name: Build multi-architecture image
    env:
      IMAGE_NAME: deck-chores
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - uses: abatilo/actions-poetry@v2.1.0
      - run: echo "VERSION=1.2.3b4" >> $GITHUB_ENV
      - run: >
          echo "PRERELEASE=true" >> $GITHUB_ENV
      - name: echo version related variables
        run: |
          echo 'VERSION: ${{ env.VERSION }}'
          echo 'PRERELEASE: ${{ env.PRERELEASE }}'
      - id: docker-metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME }}
          flavor: latest=false
          labels: |
            org.opencontainers.image.documentation=https://deck-chores.readthedocs.org/
            org.opencontainers.image.url=https://deck-chores.readthedocs.org/
          tags: |
            type=sha,prefix=src-commit-
            type=pep440,pattern={{version}},value=${{ env.VERSION }}
            type=pep440,pattern={{major}},value=${{ env.VERSION }},enable=${{ env.PRERELEASE == 'false' }}
            type=pep440,pattern={{major}}.{{minor}},value=${{ env.VERSION }},enable=${{ env.PRERELEASE == 'false' }}

      - run: echo "${{ toJSON(steps.docker-metadata.outputs.json) }}"

      - id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Dockerfile
          image: ${{ env.IMAGE_NAME }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          platforms: linux/amd64
          tags: ${{ steps.docker-metadata.outputs.tags }}

      - name: echo build outputs
        run: |
          echo "Image: ${{ steps.build-image.outputs.image }}"
          echo "Tags: ${{ steps.build-image.outputs.tags }}"
          echo "Tagged Image: ${{ steps.build-image.outputs.image-with-tag }}"
      - name: echo created images
        run: buildah images | grep '${{ env.IMAGE_NAME }}'
      - name: echo image metadata
        run: buildah inspect ${{ steps.build-image.outputs.image-with-tag }}

      - name: prepare push tag value
        id: push-tags-value
        run: echo "::set-output tags=${{ steps.docker-metadata.outputs.tags }}" | tr "\n" " " | sed "s/${{ env.IMAGE_NAME }}://g"

      - run: echo ${{ steps.push-tags-value.outputs.tags }}

      - uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - uses: redhat-actions/push-to-registry@v2
        with:
          registry: ghcr.io/${{ github.actor }}
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.push-tags-value.outputs.tags }}
